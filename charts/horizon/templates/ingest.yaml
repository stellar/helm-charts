{{- if .Values.ingest.enabled }}
---
apiVersion: apps/v1
{{- if .Values.useDeployment }}
kind: Deployment
{{ else }}
kind: StatefulSet
{{- end }}
metadata:
  name: {{ include "common.fullname" . }}-ingest
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "common.fullname" . }}-ingest
    chart: {{ include "common.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ingest.replicaCount }}
  {{- if not (.Values.useDeployment) }}
  podManagementPolicy: {{ .Values.ingest.podManagementPolicy }}
  serviceName: {{ include "common.fullname" . }}-ingest
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "common.fullname" . }}-ingest
  template:
    metadata:
      labels:
        app: {{ include "common.fullname" . }}-ingest
        release: {{ .Release.Name }}
        horizon_network: {{ .Values.global.network }}
        {{- if .Values.ingest.labels }}
        {{- range $key, $value := .Values.ingest.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- if .Values.ingest.annotations }}
      annotations:
        {{- range $key, $value := .Values.ingest.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.ingest.serviceAccountName }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.global.imagePullSecrets | nindent 6 }}
      {{- end }}
      containers:
      - name: horizon
        image: {{ include "common.horizonImage" . | quote }}
        {{- if .Values.ingest.cliArgs }}
        args:
        {{- range $flag := .Values.ingest.cliArgs }}
        - {{ $flag | quote }}
        {{- end }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.horizon.pullPolicy }}
        ports:
        - containerPort: {{ .Values.ingest.horizonConfig.port }}
          name: horizon
        - containerPort: {{ .Values.ingest.horizonConfig.adminPort }}
          name: metrics
        - containerPort: 11626
          name: core
        envFrom:
        - secretRef:
            name: {{ .Values.ingest.existingSecret }}
        - configMapRef:
            name: {{ include "common.fullname" . }}-ingest-env
        readinessProbe:
          httpGet:
            port: {{ .Values.ingest.horizonConfig.port }}
            path: /health
          initialDelaySeconds: 5
          timeoutSeconds: 5
        {{- if .Values.ingest.resources }}
        resources: {{ toYaml .Values.ingest.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /config
          name: core-config
        {{- if .Values.ingest.persistence.enabled }}
        - mountPath: /var/lib/stellar
          name: {{ include "common.fullname" . }}-ingest-var-lib-stellar
        {{- end }}
      {{- if .Values.ingest.coreExporter.enabled }}
      - name: stellar-core-prometheus-exporter
        image: "{{ .Values.global.image.coreExporter.registry }}/{{ .Values.global.image.coreExporter.repository }}:{{ .Values.global.image.coreExporter.tag }}"
        imagePullPolicy: {{ .Values.global.image.coreExporter.pullPolicy }}
        ports:
        - containerPort: 9473
          name: metrics
        {{- if .Values.ingest.coreExporter.resources }}
        resources: {{ toYaml .Values.ingest.coreExporter.resources | nindent 10 }}
        {{- end }}
      {{- end }}
      volumes:
      - name: core-config
        configMap:
          name: {{ include "common.fullname" . }}-core
      affinity: {{- toYaml .Values.ingest.affinity | nindent 8 }}
  {{- if and (.Values.ingest.persistence.enabled) (not (.Values.useDeployment))}}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "common.fullname" . }}-ingest-var-lib-stellar
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ .Values.ingest.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.ingest.persistence.size | quote }}
  {{- end }}
{{- end }}
